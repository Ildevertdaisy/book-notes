La commande "python -m venv venv" permet de créer un environnement virtuel pour Python nommé "venv". Cela permet d'installer des dépendances spécifiques à un projet sans interférer avec les dépendances utilisées par d'autres projets sur votre ordinateur.

Cette commande utilise le client httpie pour envoyer une requête GET à l'URL "https://jsonplaceholder.typicode.com/todos/1" pour récupérer des données. (venv) λ est une invite de commande pour indiquer que vous êtes dans un environnement virtuel.

pip install fastapi uvicorn => La commande pip install fastapi uvicorn permet d'installer les paquets FastAPI et Uvicorn pour utiliser leur fonctionnalités dans un projet Python.

La première ligne définit une fonction nommée "annotated_function" qui prend en entrée deux paramètres nommés "name" et "age" qui sont respectivement de type str et int. La fonction renvoie une chaîne de caractères
La deuxième ligne utilise la méthode "upper()" pour mettre en majuscule le nom passé en paramètre et utilise la chaîne formatée pour retourner une chaîne de caractères qui contient le nom et l'âge
La dernière ligne utilise la fonction "annotated_function" en lui passant les arguments "name" et "age"


La commande "pip install pydantic" installe la dépendance Pydantic pour Python.

Importer Enum, List, BaseModel et ValidationError du module pydantic
Définissez une classe d'énumération "Fuel" avec 3 valeurs.
Définissez une classe "Car" qui hérite de BaseModel.
Définir les variables marque, modèle, année, carburant et pays avec leurs types respectifs.
Définir une variable "note" avec une valeur par défaut "No note".

La première ligne crée un objet "car" de la classe Car avec les valeurs "Lancia" pour la marque, "Musa" pour le modèle, "PETROL" pour le carburant, "2006" pour l'année et ["Italy","France"] pour les pays. La deuxième ligne affiche les informations de cet objet car en format JSON.

invalid_car is an instance of the Car class with values for brand "Lancia", fuel "PETROL", year "something" and countries ["Italy", "France"].
the following line prints the values of invalid_car in json format

La première ligne de cette fonction essaie de créer un objet de type Car avec des valeurs spécifiées pour les propriétés.
La deuxième ligne gère une exception de type ValidationError qui est levée si les valeurs spécifiées pour les propriétés ne sont pas valides. Si une exception est levée, la dernière ligne imprime le message d'erreur.



